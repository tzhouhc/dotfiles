#!/usr/bin/env zsh

# get extended path
source $HOME/.zsh/base.zsh
set -e

GREEN='\033[0;32m'
RED='\033[0;31m'
NC='\033[0m'

PROMPT_MSG='summarize the commit with a title that follows the semantic commit message format, <70 chars, \
 and a description under 200 chars, format as raw json without formatting with field names "title" and "desc". Avoid stating the obvious.'

# temporarily add untracked files as "intended to commit"
git add -N .
if [[ -z $(git diff HEAD) ]]; then
  echo "No diff found."
  exit 0
fi

TEMP_FILE=$(mktemp)
# using a temp file since gum doesn't play very nicely with command that needs
# output captured.
gum spin --spinner dot --show-output --title "Summarizing..." -- \
  sh -c "git diff HEAD | mods -f \"$PROMPT_MSG\" > $TEMP_FILE 2>/dev/null"
WILL_DO=$(cat $TEMP_FILE)
rm $TEMP_FILE
TITLE=$(echo ${WILL_DO} | jq -r .title)
DESC=$(echo ${WILL_DO} | jq -r .desc)

if [[ $* == *"-y"* ]]; then
    # Flag is present
    git commit -am ${TITLE} -m ${DESC}
    exit $?
fi

# gum confirm "Use generated title and description?" && eval ${WILL_DO}
TITLE=$(gum input --prompt.foreground "#76ba29" --prompt "Title: " --value "${TITLE}")
DESC=$(gum write --prompt.foreground "#76ba29" --prompt "Description: " --value "${DESC}")

cmd="git commit -am \"${TITLE}\" -m \"${DESC}\""
gum confirm ${cmd} && git commit -am ${TITLE} -m ${DESC}
